---
name: Build if new version and upload if release

on:  # yamllint disable-line rule:truthy
  push:
    paths-ignore:
      - 'README.md'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
      || github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_TEST_COMMAND_WINDOWS: >
            cd /d {package}
            && ( rmdir ..\ugrapheme_tmp /s /q 2>NUL || cd  . )
            && mkdir ..\ugrapheme_tmp
            && cd ..\ugrapheme_tmp
            && xcopy {package} /s
            && rmdir ugrapheme /s /q
            && pytest

        # env:
        #   CIBW_SOME_OPTION: value
        #    ...
        # with:
        #   package-dir: .
        #   output-dir: wheelhouse
        #   config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
      || github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: python3 -m pip install --upgrade build

      - name: Build sdist
        run: python3 -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: |
      github.event_name == 'release' && github.event.action == 'published'
      && !endsWith(github.ref, '-test')
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1

  upload_pypi_test:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: |
      github.event_name == 'release' && github.event.action == 'published'
      && endsWith(github.ref, '-test')
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
